name: Release Workflow

on:
  release:
    types: [published]
  workflow_dispatch: # Allows manual triggering of the workflow  

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3. Set Up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Convert repository name to lowercase
        run: echo "LOWERCASE_REPOSITORY=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Echo Repository Lowercase
        run: echo $GITHUB_ENV

      # 4. Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.LOWERCASE_REPOSITORY }}:latest
            ghcr.io/${{ env.LOWERCASE_REPOSITORY }}:${{ github.event.release.tag_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Verify Docker Image
        run: docker pull ghcr.io/${{ env.LOWERCASE_REPOSITORY }}:latest

  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up JDK for Gradle
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # Grant execute permission to gradlew
      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      # Generate TypeDoc documentation (this will also install dependencies via npmCiAll)
      - name: Generate TypeDoc Documentation
        run: ./gradlew docs

      # Artifact upload step
      - name: Upload Documentation Artifact
        uses: actions/upload-artifact@v4
        with:
          name: typedoc
          path: docs

  deploy-docs:
    needs: build-docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 1) Switch to (or create) the typedocDoc branch
      - name: Checkout typedocDoc Branch
        run: |
          git checkout typedocDoc
          rm -rf docs

      # 2) Download previously generated docs
      - name: Download Documentation Artifact
        uses: actions/download-artifact@v4
        with:
          name: typedoc
          path: docs

      # (Optional) Import GPG Key and sign commits
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.BOT_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.BOT_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      # 3) Commit and push documentation
      - name: Commit and Push Documentation
        run: |
          git add docs
          git commit -m "docs: Update TypeDoc documentation"
          git push origin typedocDoc
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
